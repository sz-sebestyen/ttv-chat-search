version: "3"

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
      args:
        WORKDIR: /app
    image: ${DOCKER_USERNAME}/ttv-chat-search-backend
    depends_on:
      - mongo
      - chat-downloader
    environment:
      - DB_CONNECTION
      - CHAT_DOWNLOADER_HOST
      - PORT=$BACKEND_PORT
      - FRONTEND_HOST
    ports:
      - $BACKEND_PORT:$BACKEND_PORT
    networks:
      - the-network
    volumes:
      - ./backend:/app/

  auth-gateway:
    build:
      context: ./auth-gateway
      dockerfile: Dockerfile.dev
      args:
        WORKDIR: /app
    image: ${DOCKER_USERNAME}/ttv-chat-search-auth-gateway
    depends_on:
      - mongo
      - backend
    environment:
      - DB_CONNECTION
      - BACKEND_HOST
      - PORT=$AUTH_GATEWAY_PORT
      - FRONTEND_HOST
      - TWITCH_REDIRECT_URI
      - TWITCH_CLIENT_SECRET
      - TWITCH_CLIENT_ID
      - JWT_SECRET
    ports:
      - $AUTH_GATEWAY_PORT:$AUTH_GATEWAY_PORT
    networks:
      - the-network
    volumes:
      - ./auth-gateway:/app/

  chat-downloader:
    build:
      context: ./chat-downloader
      dockerfile: Dockerfile.dev
      args:
        WORKDIR: /app
    image: ${DOCKER_USERNAME}/ttv-chat-search-chat-downloader
    depends_on:
      - mongo
    environment:
      - DB_CONNECTION
      - TWITCH_CLIENT_ID
      - TWITCH_CLIENT_SECRET
      - TWITCH_ACCESS_TOKEN
      - PORT=$CHAT_DOWNLOADER_PORT
    ports:
      - $CHAT_DOWNLOADER_PORT:$CHAT_DOWNLOADER_PORT
    networks:
      - the-network
    volumes:
      - ./chat-downloader:/app/

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    image: ${DOCKER_USERNAME}/ttv-chat-search-frontend
    depends_on:
      - auth-gateway
    environment:
      - REACT_APP_BACKEND_HOST
    ports:
      - 3000:3000
    networks:
      - the-network
    volumes:
      - ./frontend:/app/

  mongo:
    image: mongo:4.4.6
    ports:
      - 27017:27017
    volumes:
      - mongo-data:/data/db
    networks:
      - the-network

networks:
  the-network:
    driver: bridge
volumes:
  mongo-data:
    driver: local
